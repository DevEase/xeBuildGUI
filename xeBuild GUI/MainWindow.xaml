<Window x:Class="xeBuild_GUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converters="clr-namespace:xeBuild_GUI.Converters"
        xmlns:validators="clr-namespace:xeBuild_GUI.Validators"
        xmlns:xeBuildGui="clr-namespace:xeBuild_GUI"
        Title="xeBuild GUI v{0}.{1} (Build: {2})"
        MinWidth="975"
        MinHeight="525"
        MaxWidth="975"
        MaxHeight="525"
        Background="#F0F0F0"
        ResizeMode="CanMinimize"
        WindowStartupLocation="Manual"
        Loaded="MainWindow_OnLoaded">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Menu Grid.Row="0"
              Grid.Column="0"
              Height="Auto">
            <MenuItem Header="File">
                <MenuItem Header="Load NAND" />
                <Separator />
                <MenuItem Header="Exit" />
            </MenuItem>
            <MenuItem Header="Settings">
                <MenuItem x:Name="ModesMenu" Header="Mode" />
            </MenuItem>
            <MenuItem Header="Tools" />
        </Menu>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <Popup x:Name="PatchesPopup"
                       HorizontalOffset="-1"
                       Placement="Bottom"
                       PlacementTarget="{Binding ElementName=PatchesButton}"
                       StaysOpen="False">
                    <Border x:Name="PatchesBorder"
                            MinWidth="{Binding ActualWidth,
                                               ElementName=PatchesButton,
                                               Converter={converters:SizeConverter},
                                               ConverterParameter='2'}"
                            Background="#F0F0F0">
                        <GroupBox Margin="5" Header="Optional Patches">
                            <ScrollViewer CanContentScroll="True">
                                <StackPanel x:Name="OptionalPatchesBox" />
                            </ScrollViewer>
                        </GroupBox>
                    </Border>
                </Popup>
                <Button Grid.Row="0"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Margin="10,5"
                        HorizontalAlignment="Stretch"
                        Content="Load NAND" />
                <GroupBox Grid.Row="1"
                          Grid.Column="0"
                          Grid.ColumnSpan="2"
                          Margin="10,5"
                          Header="CPUKey">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="50" />
                        </Grid.ColumnDefinitions>
                        <TextBox x:Name="CpukeyBox"
                                 Grid.Row="0"
                                 Grid.Column="0"
                                 Grid.ColumnSpan="3"
                                 Margin="0,0,5,5">
                            <TextBox.Text>
                                <Binding Mode="TwoWay"
                                         Path="Cpukey"
                                         RelativeSource="{RelativeSource FindAncestor,
                                                                         AncestorType={x:Type xeBuildGui:MainWindow}}"
                                         UpdateSourceTrigger="LostFocus">
                                    <Binding.ValidationRules>
                                        <validators:CpukeyValidator />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <Button Grid.Row="0"
                                Grid.Column="3"
                                Margin="0,0,5,5"
                                Content="..."
                                Padding="10, 5" />
                        <TextBlock Grid.Row="0"
                                   Grid.Column="4"
                                   Margin="0,0,5,5"
                                   VerticalAlignment="Center"
                                   Text="LDV:" />
                        <TextBox x:Name="LdvBox"
                                 Grid.Row="0"
                                 Grid.Column="5"
                                 Margin="0,0,5,5" />
                        <TextBlock Grid.Row="1"
                                   Grid.Column="0"
                                   Margin="0,0,5,5"
                                   VerticalAlignment="Center"
                                   Text="IP:" />
                        <TextBox x:Name="IpBox"
                                 Grid.Row="1"
                                 Grid.Column="1"
                                 Margin="0,0,5,5">
                            <TextBox.Text>
                                <Binding Mode="TwoWay"
                                         Path="IpAddress"
                                         RelativeSource="{RelativeSource FindAncestor,
                                                                         AncestorType={x:Type xeBuildGui:MainWindow}}"
                                         UpdateSourceTrigger="LostFocus">
                                    <Binding.ValidationRules>
                                        <validators:IpAddressValidator />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <Button Grid.Row="1"
                                Grid.Column="2"
                                Margin="0,0,5,5"
                                Content="Get key from XeLL"
                                IsEnabled="False"
                                Padding="10, 5">
                            <Button.Style>
                                <Style BasedOn="{StaticResource ButtonStyle}" TargetType="Button">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=IpBox}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="True" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button Grid.Row="1"
                                Grid.Column="3"
                                Grid.ColumnSpan="3"
                                Margin="0,0,5,5"
                                Content="Scan your network"
                                Padding="10, 5" />
                    </Grid>
                </GroupBox>
                <GroupBox Grid.Row="2"
                          Grid.Column="0"
                          Grid.ColumnSpan="2"
                          Margin="10,5"
                          Header="Motherboard">
                    <ComboBox x:Name="MotherboardBox" />
                </GroupBox>
                <GroupBox Grid.Row="3"
                          Grid.Column="0"
                          Margin="10,5"
                          Header="Target Kernel">
                    <ComboBox x:Name="TargetKernelBox" />
                </GroupBox>
                <Button Name="PatchesButton"
                        Grid.Row="3"
                        Grid.Column="1"
                        Margin="10,10,10,5"
                        Click="PatchesButton_OnClick"
                        Content="Optional Patches"
                        MouseEnter="PatchesButton_OnMouseEnter" />
                <GroupBox Grid.Row="4"
                          Grid.Column="0"
                          Margin="10,5"
                          Header="Target Type">
                    <ComboBox x:Name="TargetTypeBox" />
                </GroupBox>
                <GroupBox Grid.Row="4"
                          Grid.Column="1"
                          Margin="10,5"
                          Header="SMC">
                    <ComboBox x:Name="SmcBox" />
                </GroupBox>
                <Button x:Name="GenerateImageButton"
                        Grid.Row="5"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Height="50"
                        Margin="10,5"
                        Content="Generate new Image"
                        IsEnabled="False" />
            </Grid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Image Grid.Row="0"
                       Margin="0,5,10,5"
                       Source="Resources/logo.png" />
                <TabControl Grid.Row="1" Margin="0,5,10,5">
                    <TabItem x:Name="ConsoleInfoTab" Header="Console Information">
                        <Grid>
                            <TextBlock Text="Console info goes here..." />
                        </Grid>
                    </TabItem>
                    <TabItem x:Name="AdvancedSettingsTab"
                             Header="Advanced Settings"
                             Visibility="Collapsed">
                        <Grid>
                            <TextBlock Text="Advanced settings goes here..." />
                        </Grid>
                    </TabItem>
                    <TabItem x:Name="OutputTab" Header="Output Log">
                        <Grid>
                            <TextBox x:Name="OutputBox"
                                     Margin="5"
                                     IsReadOnly="True" />
                        </Grid>
                    </TabItem>
                </TabControl>
            </Grid>
        </Grid>
        <Grid x:Name="OverlayGrid"
              Grid.Row="1"
              Visibility="Collapsed"
              ZIndex="1">
            <Grid.Background>
                <SolidColorBrush Opacity="0.5" Color="Black" />
            </Grid.Background>
        </Grid>
        <Grid x:Name="BusyIndicatorGrid"
              Grid.Row="1"
              Visibility="Collapsed"
              ZIndex="2">
            <Grid.Background>
                <SolidColorBrush Opacity="0.5" Color="Black" />
            </Grid.Background>
        </Grid>
        <StatusBar Grid.Row="2">
            <StatusBarItem Content="Status:" />
            <StatusBarItem x:Name="StatusText" Content="Waiting for user interaction..." />
            <StatusBarItem HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    <StatusBarItem Content="Current Mode:" />
                    <StatusBarItem x:Name="ModeText" />
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>